# Generated by Django 3.1.3 on 2020-11-17 03:50

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models
import users.utils
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, max_length=254, unique=True, verbose_name='Email')),
                ('first_name', models.CharField(max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='Status Equipe')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='Ativo')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Criação da Conta')),
                ('email_confirm', models.BooleanField(default=False, verbose_name='Flag Email Confirmado')),
                ('share_email', models.BooleanField(default=False, verbose_name='Flag Compartilhar Email')),
                ('share_phone', models.BooleanField(default=False, verbose_name='Flag Compartilhar Telefone')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Número de Telefone')),
                ('profile_picture', models.ImageField(null=True, upload_to=users.utils.UploadToFactory('users/user/profile-picture'), verbose_name='Foto de Perfil')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Descrição')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'ordering': ['first_name'],
            },
            managers=[
                ('objects', users.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registry_id', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator('\\D')], verbose_name='Matricula')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_set', to=settings.AUTH_USER_MODEL, verbose_name='Username')),
            ],
            options={
                'verbose_name': 'Teacher',
                'verbose_name_plural': "Teacher's",
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registry_id', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator('\\D')], verbose_name='Matricula')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_set', to=settings.AUTH_USER_MODEL, verbose_name='Username')),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': "Student's",
                'ordering': ['user'],
            },
        ),
    ]
